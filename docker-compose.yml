version: "3.8"
services:
  # 1. The Node.js API service
  api:
    container_name: task_system_api
    build: .
    ports:
      - "3000:3000"
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
    networks:
      - app-network

    # 2. The MySQL Database service
  db:
      container_name: task_system_mysql
      image: mysql:8.0
      restart: always
      command: --default-authentication-plugin=mysql_native_password
      environment:
        MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        MYSQL_DATABASE: ${DB_NAME}
        MYSQL_USER: ${DB_USER}
        MYSQL_PASSWORD: ${DB_PASSWORD}
      volumes:
        - mysql-data:/var/lib/mysql
        - ./migrations:/docker-entrypoint-initdb.d
      ports:
        - "3306:3306"
      networks:
        - app-network

    # 3. The Redis service
  redis:
      container_name: task_system_redis
      image: redis:alpine
      restart: always
      ports:
        - "6379:6379"
      volumes:
        - redis-data:/data
      networks:
        - app-network
        
networks:
  app-network:
    driver: bridge

    # # 4. Placeholder for The notification service
    # worker:
    #   container_name: task_system_worker
    #   build: .
    #   environment:
    #     - REDIS_HOST=${REDIS_HOST}
    #     - REDIS_PORT=${REDIS_PORT}
    #   depends_on:
    #     - redis
    #   volumes:
    #     - .:/app

volumes:
  mysql-data:
  redis-data:
